!**< def
!define map1 (|red|green|
|yellow|blue|
)
!define map2 (|yellow|blue|
|red|green|
)
!define test (!|fitlibrary.specify.mapTraverse.ColourMap|

|''checks''|

|''colour map''|${map1}|

|''colour map''|${map2}|
)
**!
A Map is from any class to any class (ie, Map<K,V>). Pre-generics, it's not possible to determine the type of the key and the value. So ''!-FitLibrary-!'' picks one element from the Map and uses that to determine the types. This doesn't work if the map is of mixed types, as shown in another storytest.

|!-fitlibrary.spec.SpecifyFixture-!|
|${test}|!-<table border="1" cellspacing="0">
<tr><td>fitlibrary.specify.mapTraverse.ColourMap</td>
</tr>
</table>
<br><table border="1" cellspacing="0">
<tr><td><i>checks</i></td>
</tr>
</table>
<br><table border="1" cellspacing="0">
<tr><td><i>colour map</i></td>
<td><table border="1" cellspacing="0">
<tr class="pass"><td>red</td>
<td>green</td>
</tr>
<tr class="pass"><td>yellow</td>
<td>blue</td>
</tr>
</table>
</td>
</tr>
</table>
<br><table border="1" cellspacing="0">
<tr><td><i>colour map</i></td>
<td><table border="1" cellspacing="0">
<tr class="pass"><td>yellow</td>
<td>blue</td>
</tr>
<tr class="pass"><td>red</td>
<td>green</td>
</tr>
</table>
</td>
</tr>
</table>-!|
